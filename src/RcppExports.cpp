// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _mstools_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// encodePic
void encodePic(const std::vector<double>& data, std::vector<unsigned char>& result);
RcppExport SEXP _mstools_encodePic(SEXP dataSEXP, SEXP resultSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< std::vector<unsigned char>& >::type result(resultSEXP);
    encodePic(data, result);
    return R_NilValue;
END_RCPP
}
// decodeLinear
void decodeLinear(const std::vector<unsigned char>& data, arma::vec result);
RcppExport SEXP _mstools_decodeLinear(SEXP dataSEXP, SEXP resultSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<unsigned char>& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type result(resultSEXP);
    decodeLinear(data, result);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mstools_timesTwo", (DL_FUNC) &_mstools_timesTwo, 1},
    {"_mstools_encodePic", (DL_FUNC) &_mstools_encodePic, 2},
    {"_mstools_decodeLinear", (DL_FUNC) &_mstools_decodeLinear, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_mstools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
